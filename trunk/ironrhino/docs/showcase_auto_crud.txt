1.new org.ironrhino.test.model,add entity class Fake,and enum class EnumType

Fake.java:

import java.util.Date;

import org.ironrhino.core.annotation.AutoConfig;
import org.ironrhino.core.annotation.FormElement;
import org.ironrhino.core.annotation.NaturalId;
import org.ironrhino.core.annotation.NotInCopy;
import org.ironrhino.core.model.BaseEntity;

@AutoConfig
public class Fake extends BaseEntity {

	// key is unique as a natrual id and case insensitive,and cannot modify when
	// edit this entity
	@NaturalId(immutable = true, caseInsensitive = true)
	private String key;

	private String stringValue;

	// use textarea install input
	@FormElement(type = "textarea")
	private String content;

	private boolean booleanValue = true;

	private int intValue;

	private double doubleValue;

	private Date dateValue = new Date();

	// auto generate select on page
	private EnumType enumType;

	// not in page
	@NotInCopy
	private Date createDate;

	public Fake() {
	}

	public Date getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public EnumType getEnumType() {
		return enumType;
	}

	public void setEnumType(EnumType enumType) {
		this.enumType = enumType;
	}

	public boolean isBooleanValue() {
		return booleanValue;
	}

	public void setBooleanValue(boolean booleanValue) {
		this.booleanValue = booleanValue;
	}

	public String getKey() {
		return key;
	}

	public void setKey(String key) {
		this.key = key;
	}

	public String getStringValue() {
		return stringValue;
	}

	public void setStringValue(String stringValue) {
		this.stringValue = stringValue;
	}

	public int getIntValue() {
		return intValue;
	}

	public void setIntValue(int intValue) {
		this.intValue = intValue;
	}

	public double getDoubleValue() {
		return doubleValue;
	}

	public void setDoubleValue(double doubleValue) {
		this.doubleValue = doubleValue;
	}

	public Date getDateValue() {
		return dateValue;
	}

	public void setDateValue(Date dateValue) {
		this.dateValue = dateValue;
	}

}

EnumType.java:

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.util.LocalizedTextUtil;

public enum EnumType {
	INIT, ACTIVE, DESTROY;
	public String getName() {
		return name();
	}

	public String getDisplayName() {
		return LocalizedTextUtil.findText(getClass(), name(), ActionContext
				.getContext().getLocale(), name(), null);
	}
}

2.add hibernate mapping
add File src/resources/hibernate/test/Fake.hbm.xml

<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.ironrhino.test.model"
	default-lazy="true">
	<class name="Fake" table="fake">
		<id name="id" type="java.lang.String" length="32"
			unsaved-value="null">
			<generator class="uuid" />
		</id>
		<property name="key" column="_key" not-null="true" />
		<property name="stringValue" />
		<property name="content"  type="text"/>
		<property name="enumType">
			<type name="org.hibernate.type.EnumType">
				<param name="enumClass">
					org.ironrhino.test.model.EnumType
				</param>
				<param name="type">12</param>
			</type>
		</property>
		<property name="booleanValue" />
		<property name="intValue" />
		<property name="doubleValue" />
		<property name="dateValue" />
	</class>
</hibernate-mapping>

3.visit /backend/test/fake



4.advanced: 
src/struts.xml
org.ironrhino.core.ext.struts.AutoConfigPackageProvider
org.ironrhino.core.ext.struts.EntityAction